pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: terraform
    image: hashicorp/terraform:0.12.18
    command:
    - sleep
    args:
    - 99d
    tty: true
"""
    }
  }
  environment {
      TF_VAR_vsphere_user = credentials('cpn-rtp-vc1-username')
      TF_VAR_vsphere_password = credentials('cpn-rtp-vc1-password')
      TF_VAR_vsphere_server = credentials('cpn-rtp-vc1-server')
  }
  stages {
    stage('Terraform init') {
      steps {
        container('terraform') {
          sh 'cd vmware && terraform init'
        }
      }
    }
    stage('Terraform plan') {
      steps {
        configFileProvider([configFile(fileId: 'terraform-rtp.tfvars', targetLocation: 'vmware/terraform.tfvars')]) {
          container('terraform') {
            sh 'cd vmware && terraform plan'
          }
        }
      }
    }
    stage('Terraform apply') {
      steps {
        configFileProvider([configFile(fileId: 'terraform-rtp.tfvars', targetLocation: 'vmware/terraform.tfvars')]) {
          container('terraform') {
            sh 'cd vmware && terraform apply'
          }
        }
      }
    }
    stage('Terraform destroy') {
      steps {
        configFileProvider([configFile(fileId: 'terraform-rtp.tfvars', targetLocation: 'vmware/terraform.tfvars')]) {
          container('terraform') {
            sh 'cd vmware && terraform destroy'
          }
        }
      }
    }
  }
}